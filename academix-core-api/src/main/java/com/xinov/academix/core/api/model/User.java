package com.xinov.academix.core.api.model;

// Generated Mar 18, 2015 5:31:53 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "acx_users")
public class User implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7419521278061128070L;
	
	private String userId;
	private SchoolInfo schoolInfo;
	private String password;
	private String name;
	private String address;
	private String contactNo;
	private String emailId;
	private Date birthDate;
	private String sex;
	
	private Set<Attendance> attendancesForTeacherId = new HashSet<Attendance>(
			0);
	private Set<Attendance> attendancesForStudentId = new HashSet<Attendance>(
			0);
	private Set<UserDocument> userDocuments = new HashSet<UserDocument>(
			0);
	private Set<ParentChild> parentChildsForParentId = new HashSet<ParentChild>(
			0);
	private Set<ExamResult> examResultsForStudentId = new HashSet<ExamResult>(
			0);
	private Set<ExamSeatingArrangement> examSeatingArrangements = new HashSet<ExamSeatingArrangement>(
			0);
	private Set<TeacherNote> teacherNotes = new HashSet<TeacherNote>(
			0);
	private Set<ExamResult> examResultsForExaminorId = new HashSet<ExamResult>(
			0);
	private Set<ParentChild> parentChildsForChildId = new HashSet<ParentChild>(
			0);
	private Set<Notice> notices = new HashSet<Notice>(0);
	private Set<ParentInfo> parentInfos = new HashSet<ParentInfo>(0);
	private Set<AdmissionInfo> admissionInfos = new HashSet<AdmissionInfo>(
			0);
	private Set<UserRole> userRoles = new HashSet<UserRole>(0);
	private Set<PollVoter> pollVoters = new HashSet<PollVoter>(0);
	private Set<Scheduler> schedulers = new HashSet<Scheduler>(0);
	private Set<DocumentMaster> documentMastersForModifiedBy = new HashSet<DocumentMaster>(
			0);
	private Set<DocumentMaster> documentMastersForCreatedBy = new HashSet<DocumentMaster>(
			0);
	private Set<MeetingParticipent> meetingParticipents = new HashSet<MeetingParticipent>(
			0);
	private Set<OnlinePoll> onlinePolls = new HashSet<OnlinePoll>(0);
	private Set<StudentHealth> studentHealths = new HashSet<StudentHealth>(
			0);
	private Set<ExamSchedule> examSchedules = new HashSet<ExamSchedule>(
			0);
	private Set<StudentInfo> studentInfos = new HashSet<StudentInfo>(0);
	private Set<TeacherInfo> teacherInfos = new HashSet<TeacherInfo>(0);
	private Set<TeacherSubject> teacherSubjects = new HashSet<TeacherSubject>(
			0);

	public User() {
	}

	public User(String userId, SchoolInfo schoolInfo,
			String password, String name, String address, String contactNo,
			String emailId) {
		this.userId = userId;
		this.schoolInfo = schoolInfo;
		this.password = password;
		this.name = name;
		this.address = address;
		this.contactNo = contactNo;
		this.emailId = emailId;
	}

	@Id
	@Column(name = "user_id", unique = true, nullable = false, length = 45)
	public String getUserId() {
		return this.userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "school_id", nullable = false)
	public SchoolInfo getSchoolInfo() {
		return this.schoolInfo;
	}

	public void setSchoolInfo(SchoolInfo schoolInfo) {
		this.schoolInfo = schoolInfo;
	}

	@Column(name = "password", nullable = false)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "name", nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "address", nullable = false)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "contact_no", nullable = false, length = 45)
	public String getContactNo() {
		return this.contactNo;
	}

	public void setContactNo(String contactNo) {
		this.contactNo = contactNo;
	}

	@Column(name = "email_id", nullable = false, length = 100)
	public String getEmailId() {
		return this.emailId;
	}

	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "birth_date", length = 10)
	public Date getBirthDate() {
		return this.birthDate;
	}

	public void setBirthDate(Date birthDate) {
		this.birthDate = birthDate;
	}

	@Column(name = "sex", length = 10)
	public String getSex() {
		return this.sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "UsersByTeacherId")
	public Set<Attendance> getAttendancesForTeacherId() {
		return this.attendancesForTeacherId;
	}

	public void setAttendancesForTeacherId(
			Set<Attendance> attendancesForTeacherId) {
		this.attendancesForTeacherId = attendancesForTeacherId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "UsersByStudentId")
	public Set<Attendance> getAttendancesForStudentId() {
		return this.attendancesForStudentId;
	}

	public void setAttendancesForStudentId(
			Set<Attendance> attendancesForStudentId) {
		this.attendancesForStudentId = attendancesForStudentId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "Users")
	public Set<UserDocument> getUserDocuments() {
		return this.userDocuments;
	}

	public void setUserDocuments(Set<UserDocument> userDocuments) {
		this.userDocuments = userDocuments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "UsersByParentId")
	public Set<ParentChild> getParentChildsForParentId() {
		return this.parentChildsForParentId;
	}

	public void setParentChildsForParentId(
			Set<ParentChild> parentChildsForParentId) {
		this.parentChildsForParentId = parentChildsForParentId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "UsersByStudentId")
	public Set<ExamResult> getExamResultsForStudentId() {
		return this.examResultsForStudentId;
	}

	public void setExamResultsForStudentId(
			Set<ExamResult> examResultsForStudentId) {
		this.examResultsForStudentId = examResultsForStudentId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "Users")
	public Set<ExamSeatingArrangement> getExamSeatingArrangements() {
		return this.examSeatingArrangements;
	}

	public void setExamSeatingArrangements(
			Set<ExamSeatingArrangement> examSeatingArrangements) {
		this.examSeatingArrangements = examSeatingArrangements;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "Users")
	public Set<TeacherNote> getTeacherNotes() {
		return this.teacherNotes;
	}

	public void setTeacherNotes(Set<TeacherNote> teacherNotes) {
		this.teacherNotes = teacherNotes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "UsersByExaminorId")
	public Set<ExamResult> getExamResultsForExaminorId() {
		return this.examResultsForExaminorId;
	}

	public void setExamResultsForExaminorId(
			Set<ExamResult> examResultsForExaminorId) {
		this.examResultsForExaminorId = examResultsForExaminorId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "UsersByChildId")
	public Set<ParentChild> getParentChildsForChildId() {
		return this.parentChildsForChildId;
	}

	public void setParentChildsForChildId(
			Set<ParentChild> parentChildsForChildId) {
		this.parentChildsForChildId = parentChildsForChildId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "Users")
	public Set<Notice> getNotices() {
		return this.notices;
	}

	public void setNotices(Set<Notice> notices) {
		this.notices = notices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "Users")
	public Set<ParentInfo> getParentInfos() {
		return this.parentInfos;
	}

	public void setParentInfos(Set<ParentInfo> parentInfos) {
		this.parentInfos = parentInfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "Users")
	public Set<AdmissionInfo> getAdmissionInfos() {
		return this.admissionInfos;
	}

	public void setAdmissionInfos(Set<AdmissionInfo> admissionInfos) {
		this.admissionInfos = admissionInfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "Users")
	public Set<UserRole> getUserRoles() {
		return this.userRoles;
	}

	public void setUserRoles(Set<UserRole> userRoles) {
		this.userRoles = userRoles;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "Users")
	public Set<PollVoter> getPollVoters() {
		return this.pollVoters;
	}

	public void setPollVoterses(Set<PollVoter> pollVoters) {
		this.pollVoters = pollVoters;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "Users")
	public Set<Scheduler> getSchedulers() {
		return this.schedulers;
	}

	public void setSchedulers(Set<Scheduler> schedulers) {
		this.schedulers = schedulers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "UsersByModifiedBy")
	public Set<DocumentMaster> getDocumentMastersForModifiedBy() {
		return this.documentMastersForModifiedBy;
	}

	public void setDocumentMastersForModifiedBy(
			Set<DocumentMaster> documentMastersForModifiedBy) {
		this.documentMastersForModifiedBy = documentMastersForModifiedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "UsersByCreatedBy")
	public Set<DocumentMaster> getDocumentMastersForCreatedBy() {
		return this.documentMastersForCreatedBy;
	}

	public void setDocumentMastersForCreatedBy(
			Set<DocumentMaster> documentMastersForCreatedBy) {
		this.documentMastersForCreatedBy = documentMastersForCreatedBy;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "Users")
	public Set<MeetingParticipent> getMeetingParticipents() {
		return this.meetingParticipents;
	}

	public void setMeetingParticipents(
			Set<MeetingParticipent> meetingParticipents) {
		this.meetingParticipents = meetingParticipents;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "Users")
	public Set<OnlinePoll> getOnlinePolls() {
		return this.onlinePolls;
	}

	public void setOnlinePolls(Set<OnlinePoll> onlinePolls) {
		this.onlinePolls = onlinePolls;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "Users")
	public Set<StudentHealth> getStudentHealths() {
		return this.studentHealths;
	}

	public void setStudentHealths(Set<StudentHealth> studentHealths) {
		this.studentHealths = studentHealths;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "Users")
	public Set<ExamSchedule> getExamSchedules() {
		return this.examSchedules;
	}

	public void setExamSchedules(Set<ExamSchedule> examSchedules) {
		this.examSchedules = examSchedules;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "Users")
	public Set<StudentInfo> getStudentInfos() {
		return this.studentInfos;
	}

	public void setStudentInfos(Set<StudentInfo> studentInfos) {
		this.studentInfos = studentInfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "Users")
	public Set<TeacherInfo> getTeacherInfos() {
		return this.teacherInfos;
	}

	public void setTeacherInfos(Set<TeacherInfo> teacherInfos) {
		this.teacherInfos = teacherInfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "Users")
	public Set<TeacherSubject> getTeacherSubjects() {
		return this.teacherSubjects;
	}

	public void setTeacherSubjects(
			Set<TeacherSubject> teacherSubjects) {
		this.teacherSubjects = teacherSubjects;
	}

}
