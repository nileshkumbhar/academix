package com.xinov.academix.core.model;

// Generated Mar 18, 2015 5:31:53 PM by Hibernate Tools 4.3.1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Attendance generated by hbm2java
 */
@Entity
@Table(name = "acx_attendance")
public class Attendance implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 8406014332263360045L;

	private int id;
	private ClassMaster classMaster;
	private SchoolInfo schoolInfo;
	private User userByTeacherId;
	private User userByStudentId;
	private Date date;
	private boolean present;
	private String absentReason;

	public Attendance() {
	}

	public Attendance(int id, ClassMaster classMaster, SchoolInfo schoolInfo,
			User userByTeacherId, User userByStudentId, boolean present) {
		this.id = id;
		this.classMaster = classMaster;
		this.schoolInfo = schoolInfo;
		this.userByTeacherId = userByTeacherId;
		this.userByStudentId = userByStudentId;
		this.present = present;
	}

	public Attendance(int id, ClassMaster classMaster, SchoolInfo SchoolInfo,
			User usersByTeacherId, User userByStudentId, Date date,
			boolean present, String absentReason) {
		this.id = id;
		this.classMaster = classMaster;
		this.schoolInfo = SchoolInfo;
		this.userByTeacherId = usersByTeacherId;
		this.userByStudentId = userByStudentId;
		this.date = date;
		this.present = present;
		this.absentReason = absentReason;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "class_id", nullable = false)
	public ClassMaster getClassMaster() {
		return this.classMaster;
	}

	public void setClassMaster(ClassMaster classMaster) {
		this.classMaster = classMaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "school_id", nullable = false)
	public SchoolInfo getSchoolInfo() {
		return this.schoolInfo;
	}

	public void setSchoolInfo(SchoolInfo schoolInfo) {
		this.schoolInfo = schoolInfo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "teacher_id", nullable = false)
	public User getUsersByTeacherId() {
		return this.userByTeacherId;
	}

	public void setUserByTeacherId(User userByTeacherId) {
		this.userByTeacherId = userByTeacherId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "student_id", nullable = false)
	public User getUserByStudentId() {
		return this.userByStudentId;
	}

	public void setUserByStudentId(User userByStudentId) {
		this.userByStudentId = userByStudentId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date", length = 19)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	@Column(name = "present", nullable = false)
	public boolean isPresent() {
		return this.present;
	}

	public void setPresent(boolean present) {
		this.present = present;
	}

	@Column(name = "absent_reason", length = 100)
	public String getAbsentReason() {
		return this.absentReason;
	}

	public void setAbsentReason(String absentReason) {
		this.absentReason = absentReason;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj instanceof Attendance) {
			Attendance attendance = (Attendance) obj;
			return attendance.getUserByStudentId().getUserId()
					.equals(this.userByStudentId.getUserId())
					&& attendance.getDate().equals(this.date);
		}
		return false;
	}
}
